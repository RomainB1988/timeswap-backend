generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int        @id @default(autoincrement())
  email       String     @unique
  password    String
  name        String
  bio         String?
  skills      String[]
  availableAt DateTime?
  createdAt   DateTime   @default(now())

  services    Service[]         // services proposés
  reviews     Review[]          // avis reçus

  sentExchanges     Exchange[] @relation("SentExchanges")
  receivedExchanges Exchange[] @relation("ReceivedExchanges")
}

model Service {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  category    String
  duration    Int        // en minutes
  createdAt   DateTime   @default(now())

  user        User       @relation(fields: [userId], references: [id])
  userId      Int

  exchanges   Exchange[] // services associés à des échanges
}

model Exchange {
  id          Int       @id @default(autoincrement())

  fromUser    User      @relation("SentExchanges", fields: [fromUserId], references: [id])
  fromUserId  Int

  toUser      User      @relation("ReceivedExchanges", fields: [toUserId], references: [id])
  toUserId    Int

  service     Service   @relation(fields: [serviceId], references: [id])
  serviceId   Int

  status      String    // "pending", "accepted", "completed"
  createdAt   DateTime  @default(now())
}

model Review {
  id        Int       @id @default(autoincrement())
  rating    Int       // de 1 à 5
  comment   String?
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  userId    Int
}
